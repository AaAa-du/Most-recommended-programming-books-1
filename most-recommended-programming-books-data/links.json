{
    "5": [
        "Becoming a Technical Leader: An Organic Problem-Solving Approach",
        "EBG Consulting",
        "",
        "Leading Lean Software Development: Results Are not the Point",
        "The Art of Agile Development",
        "Food Rules: An Eater\u2019s Manual ",
        "The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity"
    ],
    "6": [
        "Inside the Machine: An Illustrated Introduction to Microprocessors and Computer Architecture",
        "Structure and Interpretation of Computer Programs",
        "Code: The Hidden Language of Computer Hardware and Software",
        "Code Complete: A Practical Handbook of Software Construction",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Code Simplicity: The Fundamentals of Software",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Think Like a Programmer: An Introduction to Creative Problem Solving",
        "Introduction to Algorithms",
        "Peopleware: Productive Projects and Teams",
        "Rapid Development: Taming Wild Software Schedules",
        "Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability",
        "Working Effectively with Legacy Code",
        "The Self-Taught Programmer: The Definitive Guide to Programming Professionally",
        "The Mythical Man-Month: Essays on Software Engineering",
        "HTML and CSS: Design and Build Websites",
        "Learning Web Design: A Beginner's Guide to HTML, CSS, JavaScript, and Web Graphics",
        "Eloquent JavaScript: A Modern Introduction to Programming",
        "You Don't Know Js: Up & Going",
        "Effective Java",
        "Head First Java",
        "Java Concurrency in Practice",
        "Modern PHP",
        "Head First PHP & MySQL: A Brain-Friendly Guide",
        "Eloquent Ruby",
        "The Well-Grounded Rubyist",
        "Python Crash Course: A Hands-On, Project-Based Introduction to Programming",
        "Head First Python: A Brain-Friendly Guide",
        "Learn Python 3 the Hard Way: A Very Simple Introduction to the Terrifyingly Beautiful World of Computers and Code",
        "C# in Depth",
        "C# 7.0 in a Nutshell: The Definitive Reference",
        "C Programming Language",
        "Practical C Programming: Why Does 2+2 = 5986?",
        "Objective-C Programming: The Big Nerd Ranch Guide",
        "Effective Objective-C 2.0: 52 Specific Ways to Improve Your IOS and OS X Programs",
        "C++ Primer",
        "Programming: Principles and Practice Using C++",
        "Learning R",
        "R Cookbook",
        "The Art of R Programming: A Tour of Statistical Software Design",
        "SQL in 10 Minutes, Sams Teach Yourself",
        "SQL Queries for Mere Mortals: A Hands-On Guide to Data Manipulation in SQL",
        "Android Application Development All-in-One For Dummies",
        "Head First Android Development: A Brain-Friendly Guide",
        "iOS Programming: The Big Nerd Ranch Guide",
        "Swift Programming: The Big Nerd Ranch Guide"
    ],
    "8": [
        "Code \nComplete",
        "The \nPragmatic Programmer",
        "Programming \nPearls",
        "Refactoring: \nImproving the Design of Existing Code",
        "Design \nPatterns",
        "Working \nEffectively with Legacy Code",
        "The \nCuckoo's Egg",
        "Head \nFirst Design Patterns",
        "From \nCoder to Developer",
        "Code \nReading",
        "Writing \nSecure Code 2",
        "The \nMythical Man Month",
        "Patterns \nof Enterprise Application Architecture",
        "TCP/IP \nIllustrated Volume 1",
        "Don't \nMake Me Think",
        "The \nInmates are Running the Asylum",
        "Mastering Reguler \nExpressions",
        "Test \nDriven Development",
        "Head \nRush Ajax"
    ],
    "10": [
        "7 Essential Books for Programmers",
        "Code: The Hidden Language of Computer Hardware and Software",
        "The Pragmatic Programmer",
        "Introduction to Algorithms",
        "The Art of Computer Programming: Volume 1",
        "Cracking the Coding Interview",
        "The Mythical Man-Month",
        "Algorithms to Live By"
    ],
    "16": [
        "new programming language",
        "#1. Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma, Richard, Helm, Ralph Johnson, and John Vilssides",
        "#2. Head First Design Patterns: A Brain-Friendly Guide by Eric Freeman, Bert Bates, Kathy Sierra, and Elisabeth Robson",
        "#3. Working Effectively with Legacy Code by Michael C Feathers",
        "#4. Art of Computer Programming by Donald E. Knuth",
        "#5. Compilers: Principles, Techniques, and Tools by Alfred V. Aho, Monica S. Lam, Ravi Sethi, Jeffrey D. Ullman",
        "5 books to help Java programmers improve their skills",
        "5 books to learn Apache Hadoop from scratch",
        "5 best Python programming books for beginners",
        "Biography of Apple CEO Tim Cook to be released on April 16",
        "5 good programming books for beginners to read",
        "5 technology books that every programmer should read",
        "Happy New Year: 5 books to make a positive start this year",
        "5 popular programming books you must read",
        "Top 5 Python books for beginners and experienced developers"
    ],
    "18": [
        "",
        "The Mythical Man-Month: Essays on Software Engineering",
        "The Art of Computer Programming",
        "Introduction to Algorithms",
        "Code: The Hidden Language of Computer Hardware and Software",
        "",
        "Working Effectively with Legacy Code",
        "Peopleware: Productive Projects and Teams",
        "The Pragmatic Programmer: From Journeyman to Master"
    ],
    "21": [
        "Code Complete, By Steve McConnell",
        "The Complete Reference \u2013 C++, By Herbert Schildt",
        "The C Programming Language, By Brian W. Kernighan & Dennis M. Ritchie",
        "Learning to Program, By Stephen Foote",
        "Head First C \u2013 A Brain-Friendly Guide, By David Griffiths",
        "Bonus: Beginning Programming for Dummies, By Wallace & Wally Wang",
        "Related posts",
        "Leave a Reply Cancel reply",
        "Search",
        "Recent Posts",
        "Thematic",
        "Other links"
    ],
    "23": [
        "Best Programming Books",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Code: The Hidden Language of Computer Hardware and Software",
        "Cracking the Coding Interview: 150 Programming Questions and Solutions",
        "Introduction to Algorithms, 3rd Edition (MIT Press)",
        "The C Programming Language",
        "Accelerated C++: Practical Programming by Example",
        "Code Complete: A Practical Handbook of Software Construction, Second Edition",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "C++ Primer (5th Edition)",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions (Developer Reference)",
        "Working Effectively with Legacy Code",
        "The D Programming Language",
        "Cracking the Coding Interview: 189 Programming Questions and Solutions",
        "A Gift of Fire: Social, Legal, and Ethical Issues for Computing Technology (4th Edition)",
        "Head First Java, 2nd Edition",
        "Game Engine Architecture, Second Edition",
        "How to Win Friends & Influence People",
        "C Programming: A Modern Approach, 2nd Edition",
        "Algorithms (4th Edition)",
        "Product Tags",
        "Books on reddit"
    ],
    "25": [
        "The Pragmatic Programmer",
        "The Mythical Man-month: Essays on Software Engineering",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "Refactoring: Improving the Design of Existing Code",
        "Working Effectively with Legacy Code",
        "Code Complete: A Practical Handbook of Software Construction",
        "Head First Design Patterns",
        "Peopleware: Productive Projects and Teams",
        "Soft Skills: The software developer\u2019s life manual",
        "You might also like"
    ],
    "26": [
        "The Pragmatic Programmer by David Thomas, Andrew Hunt",
        "Python Programming for Beginners by Jason Cannon",
        "Arduino for Beginners by Ethan Thorpe",
        "Mastering Deep Learning Fundamentals with Python by Richard Wilson",
        "PHP by Alexander Clyde",
        "Data Science for Beginners by Leonard Deep",
        "JavaScript Programming by Brian Jenkins",
        "C# in Depth by Jon Skeet",
        "Head First Design Patterns by Elisabeth Freeman",
        "Working Effectively With Legacy Code by Michael Feathers"
    ],
    "27": [
        "1) Clean code from Uncle Bob",
        "2) Clean architecture from Uncle Bob",
        "3) Grokking Algorithms",
        "4) Head First Design Patterns: A Brain-Friendly Guide",
        "5) Test Driven Development: By Example",
        "6) Soft Skills: The software developer\u2019s life manual",
        "7) Cracking the Coding Interview: 189 Programming Questions and Solutions",
        "8) Seven Languages in Seven Weeks: A Pragmatic Guide to Learning Programming Languages (Pragmatic Programmers)",
        "9) Programming Elixir",
        "10) Go Programming Blueprints \u2014 Second Edition"
    ],
    "29": [
        "\nThe Top Books For Intermediate Level Programmers",
        "Code Complete: A Practical Handbook of Software Construction (2nd Edition)",
        "Clean Code: A Handbook of Agile Software Craftmanship (1st Edition)",
        "The Clean Coder: A Code of Conduct for Professional Programmers 1st Edition"
    ],
    "30": [
        "1. Clean Code: A Handbook of Agile Software Craftsmanship by Robert C. Martin",
        "2. Practical Object-Oriented Design in Ruby by Sandi Metz",
        "3. The Clean Coder: A Code of Conduct for Professional Programmers by Robert C. Martin",
        "4. Refactoring: Improving the Design of Existing Code by Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts",
        "5. Eloquent JavaScript (Second Edition) by Marijn Haverbece",
        "6. Management 3.0: Leading Agile Developers, Developing Agile Leaders by Jurgen Appelo",
        "7. Bonus: CSS Secrets: Better Solutions to Everyday Web Design Problems",
        "You\u2019re going to like it!"
    ],
    "34": [
        "Categories",
        "Software Development and Devops",
        "Software Development",
        "Software Development",
        "Technical Debts",
        "Agile Processes in Software Engineering and Extreme Programming",
        "The Geodesic Developer",
        "Embedded Software Development for Safety-Critical Systems, Second Edition",
        "Productive DevOps",
        "Rethinking Productivity in Software Engineering",
        "Kanban for Beginners",
        "Agile Processes in Software Engineering and Extreme Programming",
        "Hands-On Test Management with JIRA",
        "Managing Technical Debt",
        "DevOps ICU"
    ],
    "35": [
        "1. Thinking Fast & Slow by Daniel Kahneman",
        "2.\u00a0Zen and the Art of Motorcycle Maintenance by Robert M. Pirsig",
        "3. Moneyball by Michael Lewis",
        "4. The Goal by Eliyahu M. Goldratt",
        "5. Brave New World by Aldous Huxley",
        "6. Mother Night by Kurt Vonnegut",
        "\n          Learning to code can be fun!          ",
        "With a starting salary of up to $75,000 per\u00a0year, working in tech isn\u2019t a job \u2014 it\u2019s a career."
    ],
    "37": [
        "Categories",
        "Software Development and Devops",
        "Software Development",
        "Programming",
        "Python Tricks",
        "The Complete Software Developer's Career Guide",
        "Mastering Deep Learning Fundamentals with Python",
        "Cracking the Coding Interview",
        "Python Programming",
        "Python Programming",
        "Automate the Boring Stuff with Python",
        "Invent Your Own Computer Games with Python, 4E",
        "The Linux Programming Interface",
        "Fluent Python",
        "The Go Programming Language",
        "Programming",
        "Go Programming Language",
        "Data Science for Beginners",
        "Python Programming",
        "PYTHON PROGRAMMING",
        "Python Machine Learning",
        "Python Programming",
        "Python Crash Course",
        "A Smarter Way to Learn Python",
        "Python Crash Course",
        "The Self-Taught Programmer",
        "Python Programming",
        "Python Machine Learning",
        "Soft Skills",
        "Python Programming",
        "Computer Science Distilled",
        "Effective Java",
        "PHP",
        "Elements of Programming Interviews in Python",
        "Code Complete",
        "PYTHON FOR DATA SCIENCE",
        "The Best Interface Is No Interface",
        "Python for Beginners",
        "Coding Languages Halfway",
        "Python Programming",
        "Python programming",
        "Java",
        "Applied Cryptography",
        "M Is for  Monkey",
        "Mastering Python",
        "C#",
        "Mastering Swift 4",
        "Python Programming",
        "Computer Programming for Beginners",
        "Python and Algorithmic Thinking for the Complete Beginner",
        "Scratch Programming Playground",
        "Python Programming",
        "Arduino  for Beginners",
        "Programming Elixir \u2265 1.6",
        "Python For Data Analysis",
        "SQL",
        "Practical Object-Oriented Design",
        "Python For Beginners",
        "The LEGO MINDSTORMS EV3 Discovery Book",
        "JavaScript Programming",
        "Game Programming Patterns",
        "Python for Everybody",
        "Hello, Startup",
        "Programming in Haskell",
        "The Art of Computer Programming, Volumes 1-4A Boxed Set",
        "Data Structures Using Java by D. S. Malik",
        "C++",
        "Java",
        "Java",
        "The Pragmatic Programmer",
        "Beginning Python",
        "Java",
        "A Tour of C++",
        "Python for Beginners",
        "Python Programming",
        "Python Programming",
        "Functional-Light JavaScript",
        "Think Perl 6",
        "Learn C# in One Day and Learn It Well",
        "Beginning Programming with Java For Dummies )",
        "Starting out with Programming Logic and Design",
        "Expert @ Excel",
        "Java",
        "Learning Scientific Programming with Python",
        "Making Games with Python and Pygame",
        "ARM Assembly Language Programming & Architecture",
        "Building a Mobile App",
        "C++ in One Hour a Day, Sams Teach Yourself",
        "Linux",
        "Python",
        "C#",
        "PHP",
        "Coding for Beginners",
        "Introduction to Programming Using Visual Basic",
        "Functional Programming, Simplified",
        "Python for Tweens and Teens",
        "Head First JavaScript Programming",
        "JavaScript",
        "TI Tiva ARM Programming For Embedded Systems",
        "Murach's C++ Programming",
        "Mastering Java",
        "Expert @ Excel VBA Programming",
        "Excel VBA",
        "iOS Programming"
    ],
    "39": [
        "Cracking the Coding Interview",
        "Algorithms",
        "The Algorithm Design Manual",
        "Introduction to Algorithms",
        "Algorithm Design",
        "Advanced Data Structures",
        "Purely Functional Data Structures",
        "Higher Order Perl",
        "Algorithms",
        "Randomized Algorithms and Probabilistic Analysis",
        "Introduction to the Theory of Computation",
        "Computation",
        "An Introduction to Computational Learning Theory",
        "Operating System Concepts",
        "xv6",
        "Operating Systems: Three Easy Pieces",
        "Linux Kernel Development",
        "Windows Internals",
        "The Little Book of Semaphores",
        "Modern Processor Design",
        "Readings in Computer Architecture",
        "Auction Theory",
        "Snipers, Shills, and Sharks: eBay and Human Behavior",
        "Combinatorial Auctions",
        "Multiagent Systems: Algorithmic, Game-Theoretic, and Logical Foundations",
        "Algorithmic Game Theory",
        "Site Reliability Engineering",
        "Refactoring",
        "Peopleware",
        "Renegades of the Empire",
        "Hatching Twitter",
        "Old Masters and Young Geniuses",
        "Introduction to Probability",
        "A First Course in Probability",
        "Introductory Combinatorics",
        "Calculus",
        "Calculus",
        "nand2tetris",
        "Fundamentals of Logic Design",
        "CMOS VLSI Design",
        "Semiconductor Device Fundamentals",
        "Solid State Electronic Devices",
        "Engineering Electromagnetics",
        "Pentium Pro and Pentium II System Architecture"
    ],
    "41": [
        "1 - Release it!",
        "2 - The Pragmatic Programmer: From Journeyman to Master",
        "3 - Head first Design patterns",
        "4 - Building microservices",
        "5 - Test Driven Development",
        "6 - Refactoring (2018 version)",
        "7 - The art of Scalability",
        "8 - Don't make me think",
        "That's my list",
        "How to get Gothic 1 from steam to work",
        "Aspects about Scrum that I dislike and bad implementations of it"
    ],
    "47": [
        "The Pragmatic Programmer",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "The Mythical Man-month: Essays on Software Engineering",
        "Working Effectively With Legacy Code",
        "Refactoring by Martin Fowler",
        "Head First Design Patterns",
        "Code Complete: A Practical Handbook of Software Construction",
        "Soft Skills: The Software Developer\u2019s Life Manual",
        "Peopleware: Productive Projects and Teams"
    ],
    "48": [
        "The Pragmatic Programmer: From Journeyman to Master",
        "\u00a0",
        "The C++ Programming Language, 4th Edition (Editor\u2019s Choice)",
        "Absolute Beginner\u2019s Guide to C",
        "Java: A Beginner\u2019s Guide",
        "Programming in Objective-C",
        "Ruby Programming Master\u2019s Handbook: A TRUE Beginner\u2019s Guide!",
        "Python Programming: An Introduction to Computer Science",
        "The Joy of PHP: A Beginner\u2019s Guide to Programming Interactive Web Applications with PHP and mySQL",
        "A Smarter Way to Learn JavaScript"
    ],
    "50": [
        "Code Complete: 2nd Edition, A Practical Handbook of Software Construction",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Design Patterns: Top Elements of Reusable OOS",
        "Head First Design Patterns: A Brain-Friendly Guide",
        "Refactoring: Getting Better the Design of Existing Code",
        "Effectively Working With Legacy Code",
        "Compilers: 2nd Edition \u2013 Principles, Techniques, and Tools\u00a0",
        "Professional Development Programming Books",
        "\u00a0Career Guide For Software Developer",
        "The Pragmatic Programmer: From Journeyman to Master",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "The Passionate Programmer: Making an Extraordinary Career in Software Development",
        "Conclusion:"
    ],
    "55": [
        "The Pragmatic Programmer: From Journeyman to Master",
        "The C Programming Language",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Code Complete",
        "Structure and Interpretation of Computer Programs",
        "Introduction to Algorithms",
        "Refactoring: Improving the Design of Existing Code",
        "The Mythical Man-Month: Essays on Software Engineering",
        "The Art of Computer Programming, Volumes 1\u20133 Boxed Set",
        "The C++ Programming Language",
        "Head First Design Patterns: A Brain-Friendly Guide",
        "JavaScript: The Good Parts",
        "Working Effectively with Legacy Code",
        "Compilers: Principles, Techniques, and Tools",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "The Little Schemer",
        "Test Driven Development: By Example",
        "Modern Operating Systems",
        "The UNIX Programming Environment",
        "Domain-Driven Design: Tackling Complexity in the Heart of Software",
        "xUnit Test Patterns: Refactoring Test Code",
        "Programming Ruby: The Pragmatic Programmers\u2019 Guide",
        "Effective C++: 55 Specific Ways to Improve Your Programs and Designs",
        "Head First Java",
        "Growing Object-Oriented Software, Guided by Tests",
        "Algorithms",
        "Real World Haskell: Code You Can Believe In",
        "Agile Software Development, Principles, Patterns, and Practices",
        "Artificial Intelligence: A Modern Approach",
        "The Practice of Programming (Addison-Wesley Professional Computing Series)",
        "Patterns of Enterprise Application Architecture",
        "The Algorithm Design Manual",
        "Learning Perl",
        "Learning Python",
        "How to Design Programs: An Introduction to Programming and Computing",
        "Programming Perl (3rd Edition)",
        "UNIX Network Programming: Networking APIs: Sockets and XTI; Volume 1",
        "Learn You a Haskell for Great Good!: A Beginner\u2019s Guide",
        "Advanced Programming in the UNIX Environment",
        "Joel on Software",
        "The RSpec Book",
        "Ship It!",
        "The Rails Way",
        "Concrete Mathematics: A Foundation for Computer Science",
        "ANSI Common Lisp",
        "The Elements of Style",
        "Expert C Programming: Deep C Secrets",
        "Accelerated C++: Practical Programming by Example",
        "Refactoring to Patterns (Addison Wesley Signature Series)",
        "Object-Oriented Software Construction (Book/CD-ROM)",
        "Agile Web Development with Rails: A Pragmatic Guide",
        "Extreme Programming Explained: Embrace Change (The XP Series)",
        "97 Things Every Programmer Should Know: Collective Wisdom from the Experts",
        "Introduction to the Theory of Computation",
        "Assembly Language: Step-By-Step",
        "Release It!: Design and Deploy Production-Ready Software",
        "Essentials of Programming Languages",
        "The Agile Samurai",
        "Lean from the Trenches",
        "C++ Standard Library: A Tutorial and Reference",
        "Sams Teach Yourself MySQL in 24 Hours",
        "PHP and MySQL Web Development",
        "The Art of Unit Testing: With Examples in\u00a0.NET",
        "C# in Depth",
        "Specification by Example",
        "The Visual Display of Quantitative Information",
        "Beginning Java 2",
        "Haskell: The Craft of Functional Programming",
        "Learning Ruby",
        "Sams Teach Yourself JavaScript in 24 Hours",
        "Peopleware: Productive Projects and Teams",
        "UNIX Network Programming, Volume 2: Interprocess Communications, Second Edition",
        "Writing Solid Code",
        "Hacker\u2019s Delight",
        "The Goal: A Process of Ongoing Improvement",
        "Slack: Getting Past Burnout, Busywork, and the Myth of Total Efficiency",
        "Implementing Lean Software Development: From Concept to Cash",
        "Reviewing C++",
        "Sams Teach Yourself Perl in 24 Hours",
        "C: A Reference Manual",
        "STL Tutorial and Reference Guide: C++ Programming with the Standard Template Library",
        "Simulation of Digital Communication Systems using Matlab",
        "Your First App: Node.js",
        "The Scrumban [R]Evolution: Getting the Most Out of Agile, Scrum, and Lean Kanban",
        "Fundamental Kotlin",
        "PROLOG: Programming for Artificial Intelligence",
        "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation",
        "Object-Oriented Analysis and Design with Applications",
        "Effective Modern C++: 42 Specific Ways to Improve Your Use of C++11 and C++14",
        "Eloquent JavaScript: A Modern Introduction to Programming",
        "Bridging the Communication Gap: Specification by Example and Agile Acceptance Testing",
        "Manage Your Project Portfolio",
        "Fearless Change: Patterns for Introducing New Ideas",
        "Scrum and XP from the Trenches",
        "Agile Retrospectives: Making Good Teams Great",
        "The Art of the Start: The Time-Tested, Battle-Hardened Guide for Anyone Starting Anything",
        "Genetic Programming II: Automatic Discovery of Reusable Programs",
        "Thinking Forth",
        "Software Craftsmanship: The New Imperative"
    ],
    "57": [
        "The Pragmatic Programmer: From Journeyman to Master (Paperback)",
        "Clean Code: A Handbook of Agile Software Craftsmanship (Paperback)",
        "Code Complete (Paperback)",
        "Design Patterns: Elements of Reusable Object-Oriented Software (Hardcover)",
        "Refactoring: Improving the Design of Existing Code (Hardcover)",
        "The Mythical Man-Month: Essays on Software Engineering (Paperback)",
        "Structure and Interpretation of Computer Programs (MIT Electrical Engineering and Computer Science)",
        "JavaScript: The Good Parts (Paperback)",
        "The C Programming Language (Paperback)",
        "Head First Design Patterns (Paperback)",
        "The Clean Coder: A Code of Conduct for Professional Programmers (Paperback)",
        "Introduction to Algorithms (Hardcover)",
        "Working Effectively with Legacy Code (Paperback)",
        "Effective Java Programming Language Guide (Paperback)",
        "Programming Pearls (Paperback)",
        "Domain-Driven Design: Tackling Complexity in the Heart of Software (Hardcover)",
        "Code (Paperback)",
        "Test Driven Development: By Example (Paperback)",
        "Patterns of Enterprise Application Architecture (Hardcover)",
        "Coders at Work: Reflections on the Craft of Programming (Paperback)",
        "Eloquent JavaScript: A Modern Introduction to Programming (Paperback)",
        "The C++ Programming Language (Hardcover)",
        "The Algorithm Design Manual (Hardcover)",
        "Learn You a Haskell for Great Good! (ebook)",
        "Growing Object-Oriented Software, Guided by Tests (Paperback)",
        "Effective C++: 55 Specific Ways to Improve Your Programs and Designs (Paperback)",
        "The Art of Computer Programming, Volume 1: Fundamental Algorithms (Hardcover)",
        "Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability (Paperback)",
        "The Practice of Programming (Addison-Wesley Professional Computing Series)",
        "Learning Python (Paperback)",
        "Peopleware: Productive Projects and Teams (Paperback)",
        "The Little Schemer (Paperback)",
        "Pro Git (Paperback)",
        "Cracking the Coding Interview: 150 Programming Questions and Solutions (Paperback)",
        "Clean Architecture (Paperback)",
        "JavaScript: The Definitive Guide (Paperback)",
        "Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation (Hardcover)",
        "Compilers: Principles, Techniques, and Tools (Hardcover)",
        "Seven Languages in Seven Weeks (Paperback)",
        "Joel on Software (Paperback)",
        "Head First Java (Paperback)",
        "Mastering Regular Expressions (Paperback)",
        "Java Concurrency in Practice (Paperback)",
        "Designing Data-Intensive Applications (ebook)",
        "Practical Object Oriented Design in Ruby (Paperback)",
        "Release It!: Design and Deploy Production-Ready Software (Pragmatic Programmers)",
        "97 Things Every Programmer Should Know: Collective Wisdom from the Experts (Paperback)",
        "Automate the Boring Stuff with Python: Practical Programming for Total Beginners (Paperback)",
        "Algorithms (Hardcover)",
        "Refactoring to Patterns (Hardcover)"
    ],
    "60": [
        "Code Complete",
        "Structure and Interpretation of Computer Programs",
        "C Programming Language (2nd Edition)",
        "Introduction to Algorithms",
        "Refactoring: Improving the Design of Existing Code",
        "The Mythical Man-Month",
        "The Art of Computer Programming",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Coders at Work: Reflections on the Craft of Programming",
        "CODE: The Hidden Language of Computer Hardware and Software",
        "Rapid Development (Developer Best Practices)"
    ],
    "62": [
        " Refactoring, Improving the design of existing code",
        "Clean Code",
        "SOLID Principles of Object-Oriented Design",
        "Code Complete",
        "The Art of Unit Testing",
        "Design Patterns, Elements of Reusable Object-Oriented Software",
        "Design Pattern Library"
    ],
    "66": [
        "The Pragmatic Programmer",
        "Managing Humans: Biting and Humorous Tales of a Software Engineering Manager ",
        "Cracking the Coding Interview, 6th Edition: 189 Programming Questions and Solutions",
        "Clean Code",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "Effective Java: Third Edition ",
        "Head First Design Patterns ",
        "Coding For Dummies",
        "Python Basics",
        "Beginning Programming: All-In-One Desk Reference For Dummies"
    ],
    "71": [
        "1 \u2013 Clean Code by Robert Martins",
        "2 \u2013 Design Patterns: Elements of Reusable Object-Oriented Software by Eric Gamma ",
        "3 \u2013 Patterns of Enterprise Application Architecture by Martin Fowler",
        "4 \u2013 Enterprise Integration Patterns by Gregor Hohpe",
        "5 \u2013 The Mythical Man-Month by Frederick Brooks",
        "6 \u2013 Code Complete by Steve McConnell",
        "7 \u2013 Git for Teams by\u00a0Emma Hogbin Westby",
        "8 \u2013 Refactoring: Improving the Design of Existing Code by Martin Fowler",
        "9 \u2013 The Art of Unit Testing by Roy Osherove\u00a0",
        "10 \u2013 Soft Skills: The Software Developer\u2019s Life Manual by John Sonmez ",
        "Conclusion"
    ],
    "75": [
        "Code Complete 2",
        "The Mythical Man-Month",
        "Don't Make Me Think",
        "Rapid Development",
        "Peopleware",
        "The Design of Everyday Things",
        "About Face: The Essentials of Interaction Design",
        "The Inmates Are Running the Asylum",
        "Programming Pearls",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Designing Web Usability",
        "The Visual Display of Quantitative Information",
        "Visual Explanations: Images and Quantities, Evidence and Narrative",
        "Envisioning Information",
        "Beautiful Evidence ",
        "Regular Expressions Cookbook",
        "In the beginning, there was Movable Type",
        "About Me",
        "Resources"
    ],
    "77": [
        "1) Programming Perls",
        "2) The GoF Design Patterns",
        "3) The Mythical Man-Month",
        "4) Clean Code",
        "5) Refactoring by Martin Fowler",
        "7) Effective Java",
        "Domain-Driven Design"
    ],
    "79": [
        "1.\u00a0The pragmatic programmer",
        "2. Refactoring\u00a0",
        "3. Don\u2019t make me think",
        "4. Herding Cats and Coders",
        "5. Head first design patterns",
        "6. Clean Code"
    ],
    "80": [
        "24 Deadly Sins of Software Security",
        "Artificial Intelligence for Games",
        "Mathematics for 3D Game Programming and Computer Graphics",
        "Game Programming Patterns",
        "Jump Start MySQL",
        "Head First. Android development",
        "97 Things Every Programmer Should Know",
        "Clean code: creation, analysis and refactoring",
        "Code Complete",
        "The C Programming Language",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Soft Skills: The Software Developer\u2019s Life Manual",
        "Structure and Interpretation of Computer Programs",
        "Cracking the Coding Interview: 189 Programming Interview Questions and Solution",
        "Programming Pearls",
        "Release it! Design and Deploy Production-ready Software",
        "Coders at Work: Reflections on the Craft of Programming",
        "The Mythical Man-Month",
        "Don\u2019t Make Me Think"
    ],
    "81": [
        "\n                        5 Best Programming Books for Beginners and Experts in 2019\n                    ",
        "1. Introduction to Algorithms (The MIT Press)",
        "2. Artificial Intelligence: A Modern Approach",
        "3. The Pragmatic Programmer: From Journeyman to Master",
        "4. Operating System Concepts",
        "5. Principles of Information Security"
    ],
    "82": [
        "1. Head Set Design Pattern",
        "2. Clean Code: A Handbook of Agile Software Craftsmanship",
        "3. The Pragmatic Programmer",
        "4. Growing Object-Oriented Software Guided By Tests",
        "5. The Phoenix Project",
        "6. Continuous Delivery",
        "7. Soft Skills: The Software Developer\u2019s Manual",
        "8. The Clean Coder",
        "Conclusion"
    ],
    "84": [
        "**1. Clean Code**",
        "2. The Clean Coder",
        "3. Refactoring",
        "4. Head First Design Patterns",
        "5. Head First JavaScript Programming: A Brain-Friendly Guide",
        "7. The Pragmatic Programmer"
    ],
    "88": [
        "\u00a0\u00a012.\u00a0Working Effectively with Legacy Code",
        "\u00a0\u00a011. The Mythical Man-Month",
        "\u00a0\u00a010. Design Patterns",
        "\u00a0\u00a0\u00a09. Programming Pearls (2nd Edition)",
        "\u00a0 \u00a08. CODE: The Hidden Language of Computer Hardware and Software",
        "\u00a0\u00a07.The Art of Computer Programming",
        "\u00a0\u00a06.\u00a0Refactoring",
        "\u00a0\u00a05.\u00a0Clean Code",
        "\u00a0\u00a04. Introduction to Algorithms",
        "\u00a0\u00a03. Structure and Interpretation of Computer Programs",
        "\u00a0\u00a02. Pragmatic Programmer",
        "\u00a0\u00a01. Code Complete 2"
    ],
    "91": [
        "Clean Code: A Handbook of Agile Software Craftsmanship by Robert C. Martin",
        "Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides",
        "Domain Driven Design: Tacking the Complexity in the Heart of Software by Eric Evans",
        "Effective Java by Joshua Bloch",
        "Effective Unit Testing: A guide for Java developers by Lasse Koskela",
        "Patterns of Enterprise Application Architecture by Martin Fowler",
        "Refactoring: Improving the Design of Existing Code by Martin Fowler",
        "SQL Antipatterns: Avoiding the Pitfalls of Database Programming by Bill Karwin",
        "SQL Performance Explained by Markus Winand",
        "when I realized that this book keeps its promise",
        "Test Driven: TDD and Acceptance TDD for Java Developers by Lasse Koskela"
    ],
    "93": [
        "The Self-Taught Programmer",
        "Python Crash Course",
        "Learning Python",
        "Learn Python the Hard Way",
        "Python Cookbook",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Programming Pearls",
        "Cracking the Coding Interview",
        "Code Complete: A Practical Handbook of Software Construction",
        "The Pragmatic Programmer: From Journeyman to Master",
        "The Complete Software Developer\u2019s Career Guide",
        "Soft Skills: The Software Developer\u2019s Life Manual",
        "Code: The Hidden Language of Computer Hardware and Software",
        "Related Posts:"
    ],
    "94": [
        "1. Eloquent JavaScript: A Modern Introduction to Programming by Marijn Haverbeke",
        "2. Programming Pearls by Jon Bentley",
        "3. Learning Python: Powerful Object-Oriented Programming",
        "4. The Upside of Stress- Kelly McGonigal",
        "5. The Complete Software Developer\u2019s Career Guide by John Sonmez",
        "Post navigation"
    ],
    "97": [
        "So Good They Can\u2019t Ignore You",
        "The Power of Habit: Why We Do What We Do in Life and Business",
        "The Spirit of Kaizen: Creating Lasting Excellence One Small Step at a Time: Creating Lasting Excellence One Small Step at a Time",
        "Badass: Making Users Awesome",
        "YouTube summary",
        "The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change",
        "The Effective Executive: The Definitive Guide to Getting the Right Things Done",
        "here",
        "Great at Work: How Top Performers Do Less, Work Better, and Achieve More",
        "The Checklist Manifesto: How to Get Things Right",
        "The Effective Engineer: How to Leverage Your Efforts In Software Engineering to Make a Disproportionate and Meaningful Impact",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Code Complete: A Practical Handbook of Software Construction, Second Edition",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Code Simplicity: The Fundamentals of Software",
        "Facts and Fallacies of Software Engineering",
        "Rapid Development: Taming Wild Software Schedules",
        "Making Software: What Really Works, and Why We Believe It",
        "Turn the Ship Around!: A True Story of Turning Followers into Leaders",
        "The Coaching Habit: Say Less, Ask More & Change the Way You Lead Forever",
        "Turn the Ship Around!",
        "here",
        "Measure What Matters: How Google, Bono, and the Gates Foundation Rock the World with OKRs",
        "Rapid Development: Taming Wild Software Schedules",
        "Essential Scrum: A Practical Guide to the Most Popular Agile Process",
        "The Lean Startup: How Today\u2019s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses",
        "The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win",
        "Theory of Constraints",
        "The Principles of Product Development Flow: Second Generation Lean Product Development",
        "Goldratt\u2019s Theory of Constraints: A Systems Approach to Continuous Improvement",
        "Starting to Unit Test: Not as Hard as You Think",
        "Working Effectively with Unit Tests",
        "Working Effectively with Legacy Code",
        "Data Analysis with Open Source Tools: A Hands-On Guide for Programmers and Data Scientists",
        "Don\u2019t Make Me Think, Revisited: A Common Sense Approach to Web Usability",
        "Rocket Surgery Made Easy: The Do-It-Yourself Guide to Finding and Fixing Usability Problems",
        "LinkedIn",
        "Twitter",
        "Facebook",
        "Email",
        "Print"
    ],
    "105": [
        "The Pragmatic Programmer",
        "Python for Beginners",
        "Python Programming",
        "PYTHON FOR DATA SCIENCE",
        "PYTHON PROGRAMMING",
        "Python programming",
        "Python For Beginners",
        "Python Machine Learning",
        "Python Crash Course",
        "Python Programming",
        "Python Programming",
        "Arduino  for Beginners",
        "Mastering Deep Learning Fundamentals with Python",
        "PHP",
        "Data Science for Beginners",
        "Programming",
        "Python Programming",
        "Python Programming",
        "Python Programming",
        "Python Programming",
        "JavaScript Programming",
        "C# in Depth"
    ],
    "112": [
        "#1 The New Turing Omnibus",
        "#2 The Little Book of Semaphores (free pdf)",
        "#3 Programming Pearls and More Programming Pearls",
        "#4 The Little Schemer",
        "#5 The Elements of Style and The Elements of Programming Style"
    ],
    "115": [
        " The Self-Taught Programmer: The Definitive Guide to Programming Professionally ",
        " The Art of Computer Programming, Volumes 1-4A Boxed Set ",
        " Learn JavaScript VISUALLY with Interactive Exercises: The Beautiful New Way to Learn a Programming Language (Learn Visually) ",
        " Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction to Programming ",
        " Cracking the Coding Interview: 189 Programming Questions and Solutions ",
        " Beginning C++ Through Game Programming ",
        " Clean Code: A Handbook of Agile Software Craftsmanship ",
        " The Linux Programming Interface: A Linux and UNIX System Programming Handbook ",
        " Computer Programming: This Book Includes: SQL, Linux, Java, Python, C#, Arduino, C# For Intermediates, Arduino For Intermediates Learn Any Computer Language In One Day Step by Step (#2020 Version) ",
        " Code: The Hidden Language of Computer Hardware and Software "
    ],
    "118": [
        "The Linux Programming Interface: A Linux and UNIX System Programming Handbook",
        "Beginning Linux Programming",
        "Linux Kernel Development",
        "Understanding Linux Network Internals",
        "Embedded Linux Primer: A Practical Real-World Approach (2nd Edition)"
    ],
    "119": [
        "Introduction to Computing: Explorations in Language, Logic, and Machines",
        "Explorations in Computing: An Introduction to Computer Science and Python Programming",
        "Structure and Interpretation of Computer Programs - 2nd Edition",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "Head First Design Patterns: A Brain-Friendly Guides",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Art of Computer Programming, Volumes 1-4A",
        "Introduction to Algorithms, 3rd Editions",
        "Cracking the Coding Interview: 150 Programming Questions and Solutions",
        "Domain-Driven Design: Tackling Complexity in the Heart of Software",
        "Patterns of Enterprise Application Architecture",
        "Refactoring to Patterns",
        "JavaScript: The Good Parts",
        "Thinking in Java (4th Edition)",
        "Effective Modern C++: 42 Specific Ways to Improve Your Use of C++11 and C++14",
        "C# in Depth, 3rd Editions",
        "Learning Python: Powerful Object-Oriented Programming",
        "Kotlin in Actions",
        "Programming Elixir: Functional |> Concurrent |> Pragmatic |> Fun",
        "The Rust Programming Language",
        "The C Programming Language",
        "The Go Programming Language",
        "The Pragmatic Programmer: From Journeyman to Master",
        "The Clean Coder",
        "Soft Skills: The software developer's life manual",
        "#tools #books #book #programming #learning",
        "Most Popular",
        "Newest"
    ],
    "121": [
        "1. Coders at Work: Reflections on the Craft of Programming",
        "2. Code Complete: A Practical Handbook of Software Construction",
        "3. The Mythical Man Month",
        "4. Don\u2019t Make Me Think, Revisited: A Common Sense Approach to Web Usability",
        "5. The Pragmatic Programmer: From Journeyman to Master",
        "6. Clean Code: A Handbook of Agile Software Craftsmanship",
        "7. Programming Pearls",
        "8. Cracking the Coding Interview: 150 Programming Questions and Solutions",
        "9. Soft Skills: The Software Developer\u2019s Life Manual",
        "Bonus Book: Zero Bugs and Program Faster",
        "Looking for a Career in Web Development?",
        "Leave a Reply Cancel reply",
        "Author",
        "Wondering if TECH might be right for you?",
        "\nPrograms\n",
        "\nResources\n",
        "\nAbout\n",
        "\nLocations\n",
        "Leave a Reply Cancel reply"
    ],
    "122": [
        "The Pragmatic Programmer: Your Journey to Mastery",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design",
        "Agile Principles, Patterns, and Practices in C#"
    ],
    "125": [
        "\n                                Here is a list of ten books that are essential for any Java programmers who want to improve their knowledge and understanding of Java.\n                            ",
        "1. Effective Java",
        "2. Clean Code",
        "3. Java Concurrency in Practice",
        "4. Head First Design Patterns",
        "5. Spring in Action",
        "6. Test Driven",
        "7. The Definitive Guide to Java Performance",
        "8. Head First Java",
        "9. Head First Object-Oriented Analysis and Design",
        "10. Java: A Beginner's Guide",
        "Like This Article? Read More From DZone"
    ],
    "126": [
        "Clean Code",
        "Code Complete",
        "Pragmatic Programmer",
        "Refactoring: Improving the Design of Existing Code",
        "Working Effectively with Legacy Code",
        "The Art of Readable Code",
        "Code Simplicity",
        "Beautiful Code",
        "Test Driven",
        "Dreaming in Code"
    ],
    "132": [
        "Book #1 \u2013 The Miracle Morning: ",
        "Book #2 \u2013 The Compound Effect",
        "Book #3 \u2013 The Power of Habit: Why We Do What We Do in Life and Business",
        "Book #4 \u2013 Getting Things Done: The Art of Stress-Free Productivity",
        "Book #5 \u2013 The Personal MBA: Master the Art of Business",
        "Book #6 \u2013 The Pragmatic Programmer: From Journeyman to Master",
        "Book #7 \u2013 Clean Code: A Handbook of Agile Software Craftsmanship"
    ],
    "134": [
        "#1 Clean Code",
        "#2 Introduction to Algorithms",
        "#3 C++: How to Program",
        "#4 Code Complete",
        "#5 The Pragmatic Programmer",
        "#Other recommendations"
    ],
    "135": [
        "Patterns of Enterprise Application Architecture",
        "Refactoring: Improving the Design of Existing Code",
        "Refactoring to Patterns",
        "The Design of Sites: Patterns for Creating Winning Web Sites (2nd Edition)",
        "Microsoft .NET - Architecting Applications for the Enterprise (2nd Edition) (Developer Reference)",
        "Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability (3rd Edition) (Voices That Matter)",
        "Information Dashboard Design: The Effective Visual Communication of Data",
        "Design Patterns in C#",
        "Any O'Reilly Pocket References",
        "The Clean Coder: A Code of Conduct for Professional Programmers (Robert C. Martin Series)"
    ],
    "139": [
        "Foundations of Programming",
        "How to Think Like a Computer Scientist",
        "The Road to learn React",
        "How to Design Programs",
        "Eloquent Javascript",
        "Producing Open Source Software",
        "97 Things Every Programmer Should Know",
        "Essential Coding Theory",
        "Building Skills in Programming"
    ],
    "141": [
        "The Pragmatic Programmer",
        "Continuous Delivery",
        "Clean Code / The Clean Coder",
        "Release It!",
        "Head First Design Patterns / Patterns of Enterprise Application Architecture",
        "Working Effectively with Legacy Code",
        "Refactoring / xUnit Test Patterns",
        "The Passionate Programmer / Land the Tech Job You Love",
        "Apprenticeship Patterns",
        "The Art of Agile Development",
        "Update: Domain-Driven Design Distilled"
    ],
    "143": [
        "The Self-Taught Programmer",
        "Code: The Hidden Language of Computer Hardware and Software",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Structure and Interpretation of Computer Programs",
        "Think Like a Programmer: An Introduction to Creative Problem Solving",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Complete Software Developer\u2019s Career Guide"
    ],
    "147": [
        "Eloquent JavaScript: A Modern Introduction to Programming by Marijn Haverbeke",
        "You Don\u2019t Know JS (book series) by Kyle\u00a0Simpson",
        "The Complete Software Developer\u2019s Career Guide by John\u00a0Sonmez",
        "Clean Code: A Handbook of Agile Software Craftsmanship by Robert C.\u00a0Martin",
        "Cracking the Coding Interview by Gayle Laakmann\u00a0McDowell",
        "Before you\u00a0go"
    ],
    "151": [
        "The Pragmatic Programmer",
        "The Mythical Man-month: Essays on Software Engineering",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "Refactoring: Improving the Design of Existing Code",
        "Working Effectively With Legacy Code",
        "Code Complete: A Practical Handbook of Software Construction",
        "Head First Design Patterns",
        "Peopleware: Productive Projects and Teams",
        "Soft Skills: The Software Developer's Life Manual",
        "\n                    Agile Partner Resources\n"
    ],
    "154": [
        "The Pragmatic  Programmer",
        "Head First Design Patterns",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder",
        "Growing Object-Oriented Software Guided by Tests",
        "The Phoenix Project",
        "The Software Craftsman",
        "Soft Skills: The Software Developer\u2019s Life Manual",
        "Continuous Delivery",
        "Release It!",
        "Peopleware",
        "Nonviolent Communication",
        "The Goal: A Process of Ongoing Improvement",
        "Domain-Driven Design"
    ],
    "160": [
        "Code Complete: A Practical Handbook of Software Construction (By Steve McConnell)",
        "Clean Code: A Handbook of Agile Software Craftsmanship (By Robert C. Martin)",
        "Soft Skills: The software developer\u2019s life manual (By John Sonmez)",
        "The Pragmatic Programmer: From Journeyman to Master (By Andrew Hunt, Dave Thomas)",
        "Structure and Interpretation of Computer Programs 2nd Edition (MIT Electrical Engineering and Computer Science, By Harold Abelson, Gerald Jay Sussman, Julie Sussman)",
        "Coding\u00a0Interview:\u00a0189\u00a0Programming\u00a0Questions\u00a0and Solutions\u00a06th\u00a0Edition (By Gayle Laakmann McDowell)",
        "The Self-Taught Programmer: The Definitive Guide to Programming Professionally (by Cory Althoff)",
        "Python Crash Course: A Hands-On, Project-Based Introduction to Programming (By Eric Matthes)",
        "HTML and CSS: Design and Build Websites (By John Duckett)",
        "Java: A Beginner\u2019s Guide, Sixth Edition (By Herbert Schildt)",
        "Conclusion \u2013 Best Programming Books",
        "Leave a Reply Cancel reply"
    ],
    "161": [
        "'Code Complete' by Steve McConnell",
        "'The Pragmatic Programmer' by Andrew Hunt and David Thomas",
        "'Clean Code' by Robert Martin",
        "'The Mythical Man-Month' by Frederick Brooks",
        "'Working Effectively With Legacy Code' by Michael Feathers",
        "'Design Patterns' by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides",
        "'Patterns of Enterprise Application Architecture' by Martin Fowler",
        "'The Phoenix Project' by Gene Kim, Kevin Behr, and George Spafford"
    ],
    "168": [
        "The Art of Computer Programming",
        "Mythical Man Month",
        "Code Complete: A Practical Handbook of Software Construction",
        "Coders at Work: Reflections on the Craft of Programming",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "Programming Pearls",
        "Code: The Hidden Language of Computer Hardware and Software",
        "Working Effectively with Legacy Code",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "The Passionate Programmer: Creating a Remarkable Career in Software Development",
        "Writing Solid Code",
        "Software Craftsmanship: The New Imperative",
        "Understanding the Professional Programmer",
        "Beautiful Code: Leading Programmers Explain How They Think",
        "Structure and Interpretation of Computer Programs",
        "Refactoring to Patterns",
        "The Relational Model for Database Management",
        "Introduction to Algorithms",
        "Compilers: Principles, Techniques, and Tools",
        "Algorithms + Data Structures = Programs",
        "Algorithms",
        "Foundations of Security: What Every Programmer Needs to Know",
        "How to Design Programs: An Introduction to Programming and Computing",
        "Software Requirements",
        "Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions",
        "Patterns of Enterprise Application Architecture",
        "Peopleware: Productive Projects and Teams",
        "Software Estimation: Demystifying the Black Art",
        "Collaboration Explained: Facilitation Skills for Software Project Leaders",
        "Rework",
        "Leading Lean Software Development: Results Are Not the Point",
        "Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives",
        "Agile Software Development, Principles, Patterns, and Practices",
        "Practices of an Agile Developer",
        "Agile Estimating and Planning",
        "User Stories Applied: For Agile Software Development",
        "Agile Documentation: A Pattern Guide to Producing Lightweight Documents for Software Projects",
        "Succeeding with Agile: Software Development Using Scrum",
        "Agile Testing: A Practical Guide for Testers and Agile Teams",
        "Agile!: The Good, the Hype and the Ugly",
        "Cracking the Coding Interview: 150 Programming Questions and Solutions",
        "Soft Skills: The Software Developer\u2019s Life Manual",
        "The Practice of Programming",
        "Pragmatic Thinking and Learning: Refactor Your Wetware",
        "Apprenticeship Patterns: Guidance for the Aspiring Software Craftsman",
        "Writing Effective Use Cases",
        "Don\u2019t Make Me Think, Revisited: A Common Sense Approach to Web Usability",
        "HTML and CSS: Design and Build Websites",
        "CSS: The Definitive Guide",
        "Beginning HTML5 and CSS3: The Web Evolved",
        "Design for Hackers: Reverse Engineering Beauty",
        "HTML5 Pocket Reference: Quick, Comprehensive, Indispensable",
        "Even Faster Websites: Performance Best Practices for Web Developers",
        "PHP Solutions: Dynamic Web Design Made Easy",
        "Beginning ASP.NET 3.5: In C# and VB",
        "Testing Computer Software",
        "Debugging: The 9 Indispensable Rules for Finding Even the Most Elusive Software and Hardware Problems",
        "Growing Object-Oriented Software, Guided by Tests",
        "Ship it! A Practical Guide to Successful Software Projects",
        "Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation",
        "Rapid Deployment: Taming Wild Software Schedules",
        "Release it! Design and Deploy Production-Ready Software",
        "Essential Scrum: A Practical Guide to the Most Popular Agile Process",
        "Zero Bugs and Program Faster",
        "The Art of Software Testing",
        "Regular Expressions Cookbook",
        "The Joy of PHP: A Beginner\u2019s Guide to Programming Interactive Web Applications with PHP and MySQL",
        "The C Programming Language",
        "Designing Web Usability",
        "Thinking in Java",
        "Effective C++",
        "The Art of Unix Programming",
        "HTML & XHTML: The Definitive Guide",
        "Effective Java",
        "Smalltalk Best Practice Patterns",
        "XML in a Nutshell",
        "High Performance MySQL: Optimization, Backups, and Replication",
        "SQL in 10 Minutes, Says Teach Yourself",
        "Seven Languages in Seven Weeks",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "Head First Design Patterns",
        "Refactoring: Improving the Design of Existing Code",
        "Domain-Driven Design: Taking Complexity in the Heart of Software",
        "About Face: The Essentials of Interaction Design",
        "Object Design: Roles, Responsibilities, and Collaborations",
        "The Non-Designer\u2019s Design Book",
        "User Interface Design for Programmers",
        "Object Thinking (Developer Reference)",
        "Godel, Escher, Bach",
        "Inside the Machine: An Illustrated Guide to Microprocessors and Computer Architecture",
        "Extreme Programming Explained: Embrace Change",
        "The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity",
        "Envisioning Information",
        "The Best Software Writing I",
        "The Visual Display of Quantitative Information",
        "Computer Systems: A Programmer\u2019s Perspective",
        "The Timeless Way of Building",
        "Facts and Fallacies of Software Engineering",
        "The Design of Everyday Things: Revised and Expanded Edition",
        "The Annotated Turing"
    ],
    "172": [
        "1.1 The pragmatic programmer: from Journeyman to Master",
        "1.2 Code Complete: A Practical Handbook of Software Construction, Second Edition",
        "1.3 Don\u2019t Make Me Think, Revisited: A Common Sense Approach to Web Usability",
        "1.4 Absolute Beginner\u2019s Guide to C",
        "1.5 Java: A Beginner\u2019s Guide, Sixth Edition",
        "1.6 Developing Large Web Applications: Producing Code That Can Grow and Thrive",
        "1.7 Ruby Programming Master\u2019s Handbook: A True Beginner\u2019s Guide",
        "1.8 Python Programming: An Introduction to Computer Science",
        "1.9 The Joy of PHP: A Beginner\u2019s Guide to Programming Interactive Web Applications with PHP and MySQL",
        "1.10 A Smarter Way to Learn JavaScript. The new tech-assisted approach that requires half the effort"
    ],
    "174": [
        "Clean Code",
        "Pragmatic Programmer",
        "Ruby under a microscope",
        "Practical Object-Oriented Design in Ruby",
        "Refactoring Ruby",
        "The Ruby on Rails tutorial",
        "The Rails Way",
        "Rebuilding Rails",
        "Crafting Rails 4 applications",
        "Confident Ruby"
    ],
    "175": [
        "1. The Pragmatic Programmer (A. Hunt & D. Thomas)",
        "2. The Clean Coder (R. Martin)",
        "3. Coders at Work (P. Seibel)",
        "4. Clean Code (R. Martin)",
        "5. The Art of Unix Programming (E. Raymond)",
        "6. Prefactoring (K. Pugh)",
        "7. So Good They Can't Ignore You (C. Newport)",
        "\n      X-Team Weekly\n    ",
        "Anton Orlov on the Unexpected Benefits of VR",
        "X-Outpost: Austria (skiing)"
    ],
    "178": [
        "Code Complete",
        "",
        "The Pragmatic Programmer",
        "Programming Pearls",
        "",
        "",
        "Refactoring - Fowler, Beck, Brant, Opdyke, Roberts",
        "",
        "Design of the UNIX Operating System",
        "Design Patterns - Gamma, Helm, Johnson, Vlissides"
    ],
    "180": [
        "1. Coders at Work ",
        "2. Don\u2019t Make me Think",
        "3. You Don\u2019t Know JS (Up & Going)",
        "4. The Pragmatic Programmer",
        "5. Clean Code",
        "6. Head First Programming",
        "7. Code ",
        "Kodilla Newsletter"
    ],
    "182": [
        "Code: The Hidden Language of Computer Hardware and Software",
        "Code Complete 2",
        "Working Effectively with Legacy Code",
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Algorithm Design Manual",
        "Introduction to Algorithms",
        "The Art of Computer Programming",
        "Refactoring: Improving the Design of Existing Code",
        "Regular Expressions Cookbook",
        "Zero Bugs",
        "Programming Pearls",
        "The Principles of Object-Oriented JavaScript",
        "Understanding ECMAScript 6",
        "Eloquent JavaScript",
        "You Don\u2019t Know JS",
        "Envisioning Information",
        "Visual Explanations",
        "The Visual Display of Quantitative Information",
        "Beautiful Evidence",
        "The Design of Everyday Things",
        "About Face: The Essentials of Interaction Design",
        "Designing Web Usability",
        "Don\u2019t Make Me Think",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "Rapid Development",
        "The Pragmatic Programmer",
        "The Inmates Are Running the Asylum",
        "Head First Design Patterns",
        "Agile Software Development, Principles, Patterns, and Practices",
        "Dreaming in Code",
        "The Clean Coder",
        "Patterns of Enterprise Application Architecture",
        "Clean Architecture",
        "Accessibility for Everyone",
        "The Mythical Man-Month",
        "Becoming a Technical Leader",
        "technical leadership",
        "The Passionate Programmer",
        "Peopleware",
        "Soft Skills: The Software developer\u2019s life manual",
        "the importance of showing off your soft skills",
        "blog",
        "web devs blogs",
        "Demystifying Public Speaking",
        "tech conf",
        "Reading List from Intel\u00a0"
    ],
    "186": [
        "1. Refactoring: Improving the Design of Existing Code by Martin Fowler",
        "2. Design Patterns by Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides",
        "3. Clean Code by Robert C. Martin",
        "4. Rework by Jason Fried",
        "5. The Pragmatic Programmer by Andrew Hunt and Dave Thomas"
    ],
    "192": [
        "Clean Code: A Handbook of Agile Software Craftsmanship",
        "The Clean Coder: A Code of Conduct for Professional Programmers",
        "The Phoenix Project: A Novel about IT, DevOps, and Helping your Business Win",
        "The Pragmatic Programmer: From Journeyman to Master",
        "Design Patterns: Elements of Reusable Object-Oriented Software",
        "The Imposter's Handbook: A Primer for Self-Taught Programmers",
        "Refactoring: Improving the Design of Existing Code"
    ]
}